{"version":3,"file":"react-genie.cjs.production.min.js","sources":["../src/utils.ts","../src/reveal-animations.ts","../src/animations.ts","../src/Reveal.tsx","../src/reveal-context.tsx","../src/RevealProvider.tsx","../src/SequenceElement.tsx","../src/AnimatedTitle.tsx","../src/RevealChildren.tsx","../src/RevealElements.tsx"],"sourcesContent":["type Unit = string | number;\n\nexport const translate3d = (a: Unit, b: Unit, c: Unit) =>\n  `translate3d(${a}, ${b}, ${c})`;\n","import { createGlobalStyle, keyframes } from 'styled-components';\nimport * as animations from './animations';\n\n// @ts-ignore\nimport fadeIn from 'react-animations/lib/fade-in';\n// @ts-ignore\nimport fadeInLeft from 'react-animations/lib/fade-in-left';\n// @ts-ignore\nimport fadeInRight from 'react-animations/lib/fade-in-right';\n// @ts-ignore\nimport slideInLeft from 'react-animations/lib/slide-in-left';\n// @ts-ignore\nimport slideInRight from 'react-animations/lib/slide-in-right';\n// @ts-ignore\nimport bounceInLeft from 'react-animations/lib/bounce-in-left';\n// @ts-ignore\nimport bounceInRight from 'react-animations/lib/bounce-in-right';\n\nexport enum Animation {\n  FadeInUp = 'fade-in-up',\n  FadeIn = 'fade-in',\n  SlideInLeft = 'slide-in-left',\n  SlideInRight = 'slide-in-right',\n  FadeInLeft = 'fade-in-left',\n  FadeInRight = 'fade-in-right',\n  BounceInLeft = 'bounce-in-left',\n  BounceInRight = 'bounce-in-right',\n}\n\nexport const RevealGlobalStyles = createGlobalStyle`\n\n  .${Animation.FadeInUp} {\n    animation: ${keyframes`${animations.fadeInUp}`} 500ms;\n  } \n  \n  .${Animation.FadeIn} {\n    animation: ${keyframes`${fadeIn}`} 500ms;\n  }\n  \n  .${Animation.SlideInLeft} {\n    animation: ${keyframes`${slideInLeft}`} 500ms;\n  }\n  \n  .${Animation.SlideInRight} {\n    animation: ${keyframes`${slideInRight}`} 500ms;\n  }\n\n  .${Animation.FadeInLeft} {\n    animation: ${keyframes`${fadeInLeft}`} 500ms;\n  }\n\n  .${Animation.FadeInRight} {\n    animation: ${keyframes`${fadeInRight}`} 500ms;\n  }\n\n  .${Animation.BounceInLeft} {\n    animation: ${keyframes`${bounceInLeft}`} 1250ms;\n  }\n\n  .${Animation.BounceInRight} {\n    animation: ${keyframes`${bounceInRight}`} 1250ms;\n  }\n`;\n","import { translate3d } from './utils';\n\nexport const fadeInUp = {\n  from: {\n    opacity: 0,\n    transform: translate3d(0, '50px', 0),\n  },\n  to: {\n    opacity: 1,\n    transform: 'none',\n  },\n};\n","import { Property } from 'csstype';\nimport React, { useEffect, useState } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport { Animation } from './reveal-animations';\n\nexport enum RevealMode {\n  Clone,\n  Wrap,\n}\n\nexport const Reveal: React.FC<{\n  animation?: string; //animation class name\n  delay?: number;\n  children?: any;\n  mode?: RevealMode;\n  debugName?: string;\n  style?: React.CSSProperties;\n  onShowDone?: () => void;\n  onEnterView?: () => void;\n  wait?: boolean;\n}> = ({\n  children,\n  onShowDone,\n  mode = RevealMode.Wrap,\n  animation = Animation.FadeInUp,\n  delay = 0,\n  debugName,\n  style,\n  wait,\n  onEnterView,\n}) => {\n  const [ref, inView] = useInView({ triggerOnce: true });\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    if (debugName) {\n      console.log('Debugging', debugName);\n    }\n    if (inView) {\n      onEnterView && onEnterView();\n      if (wait !== true) {\n        if (debugName) {\n          console.log(`${debugName} is in view`);\n        }\n        setTimeout(() => {\n          setShow(true);\n          onShowDone && onShowDone();\n          if (debugName) {\n            console.log(`showing ${debugName}`);\n          }\n        }, delay);\n      }\n    }\n  }, [inView, wait]);\n\n  let className = show\n    ? animation\n    : children.props\n    ? children.props.className\n    : '';\n\n  let extraProps = {\n    className,\n    style: {\n      visibility: (show ? 'visible' : 'hidden') as Property.Visibility,\n      ...style,\n    },\n    ref,\n  };\n\n  if (mode === RevealMode.Clone) {\n    return React.cloneElement(children, extraProps);\n  }\n\n  return <div {...extraProps}>{children}</div>;\n};\n","import React from 'react';\nimport { RevealProviderProps } from './RevealProvider';\n\ntype IndexState = { lastIndex: number; setLastIndex: (i: number) => void };\ntype ReavealContextValue = RevealProviderProps & IndexState;\n\nexport const RevealContext = React.createContext<ReavealContextValue | any>(\n  null\n);\n","import React, { useState } from 'react';\nimport { RevealMode } from 'Reveal';\nimport { RevealContext } from './reveal-context';\n\nexport type RevealProviderProps = {\n  delayBetween?: number;\n  initialDelay?: number;\n  disableDelay?: boolean;\n  mode?: RevealMode;\n  animation?: string;\n};\n\nexport const RevealProvider: React.FC<RevealProviderProps> = ({\n  children,\n  delayBetween = 200,\n  initialDelay = 0,\n  disableDelay = false,\n}) => {\n  const [lastIndex, setLastIndex] = useState<number>(0);\n  const [firstIndex, setFirstIndex] = useState<number | null>(null);\n\n  return (\n    <RevealContext.Provider\n      value={{\n        lastIndex,\n        firstIndex,\n        setFirstIndex,\n        setLastIndex,\n        delayBetween,\n        initialDelay,\n        disableDelay,\n      }}\n    >\n      {children}\n    </RevealContext.Provider>\n  );\n};\n\nexport default RevealProvider;\n","import React, { useContext } from 'react';\nimport { RevealProviderProps } from 'RevealProvider';\nimport { Reveal } from './Reveal';\nimport { RevealContext } from './reveal-context';\n\nexport const SequenceElement: React.FC<\n  {\n    children: any;\n    index: number;\n  } & RevealProviderProps\n> = ({ index, children, ...rest }) => {\n  const revealContext = useContext(RevealContext);\n\n  const config = {\n    ...revealContext,\n    ...rest,\n  };\n\n  const {\n    delayBetween,\n    initialDelay,\n    disableDelay,\n    mode,\n    animation,\n    lastIndex,\n    setLastIndex,\n    firstIndex,\n    setFirstIndex,\n  } = config;\n\n  const shouldWait = firstIndex === 0;\n  const wait = shouldWait ? index > lastIndex : false;\n  const isFirstElement = index === 0;\n  const firstElementDelay = initialDelay !== undefined ? initialDelay : 0;\n  const shouldDisableDelay = disableDelay || firstIndex !== 0;\n  const finalDelay = disableDelay\n    ? 0\n    : isFirstElement\n    ? firstElementDelay\n    : delayBetween;\n\n  return (\n    <Reveal\n      wait={wait}\n      mode={mode}\n      animation={animation}\n      onShowDone={() => setLastIndex(index + 1)}\n      onEnterView={() => {\n        if (firstIndex === null) {\n          setFirstIndex(index);\n        }\n      }}\n      delay={shouldDisableDelay ? 0 : finalDelay}\n      key={index}\n    >\n      {children}\n    </Reveal>\n  );\n};\n\nexport default SequenceElement;\n","import React from 'react';\nimport { Reveal } from './Reveal';\n\nexport const AnimatedTitle: React.FC<\n  {\n    children: string;\n    spaceBetweenWords?: number;\n    delay?: number;\n  } & React.HTMLAttributes<any>\n> = ({ children, delay = 100, spaceBetweenWords = 8, ...rest }) => {\n  const titleStyles = {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  } as React.CSSProperties;\n\n  const wordStyles = {\n    marginRight: spaceBetweenWords,\n  } as React.CSSProperties;\n\n  return (\n    <div style={titleStyles}>\n      {children.split(' ').map((word, index) => (\n        <Reveal key={index} delay={index * delay} style={wordStyles}>\n          <div {...rest}>{word}</div>\n        </Reveal>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport SequenceElement from './SequenceElement';\nimport { RevealProvider, RevealProviderProps } from './RevealProvider';\n\nexport const RevealChildren: React.FC<RevealProviderProps> = ({\n  children,\n  ...rest\n}) => {\n  return (\n    <RevealProvider {...rest}>\n      {React.Children.map(children, (child: any, index: number) => (\n        <SequenceElement index={index} key={index}>\n          {child}\n        </SequenceElement>\n      ))}\n    </RevealProvider>\n  );\n};\n","import React, { ReactElement } from 'react';\nimport RevealProvider, { RevealProviderProps } from './RevealProvider';\nimport SequenceElement from './SequenceElement';\n\nexport const RevealElements: React.FC<\n  {\n    elements?: any;\n    children: (elem: any, index: number) => ReactElement;\n  } & RevealProviderProps\n> = ({ elements, children, ...rest }) => {\n  return (\n    <RevealProvider {...rest}>\n      {elements.map((elem: any, index: number) => {\n        return (\n          <SequenceElement index={index} key={index}>\n            {children(elem, index)}\n          </SequenceElement>\n        );\n      })}\n    </RevealProvider>\n  );\n};\n\nexport default RevealElements;\n"],"names":["Animation","fadeInUp","from","opacity","transform","a","b","c","translate3d","to","RevealMode","RevealGlobalStyles","createGlobalStyle","FadeInUp","keyframes","animations","FadeIn","fadeIn","SlideInLeft","slideInLeft","SlideInRight","slideInRight","FadeInLeft","fadeInLeft","FadeInRight","fadeInRight","BounceInLeft","bounceInLeft","BounceInRight","bounceInRight","Reveal","children","onShowDone","mode","Wrap","animation","delay","debugName","style","wait","onEnterView","useInView","triggerOnce","ref","inView","useState","show","setShow","useEffect","console","log","setTimeout","extraProps","className","props","visibility","Clone","React","cloneElement","RevealContext","createContext","RevealProvider","delayBetween","initialDelay","disableDelay","lastIndex","setLastIndex","Provider","value","firstIndex","setFirstIndex","SequenceElement","index","rest","config","useContext","undefined","key","spaceBetweenWords","wordStyles","marginRight","display","flexDirection","justifyContent","alignItems","flexWrap","split","map","word","Children","child","elements","elem"],"mappings":"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"}